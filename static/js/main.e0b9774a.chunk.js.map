{"version":3,"sources":["components/ContactForm.styles.jsx","components/ContactForm.jsx","components/ContactList.styles.jsx","components/ContactList.jsx","components/Filter.styles.jsx","components/Filter.jsx","App.js","index.js"],"names":["Form","styled","form","ContactForm","name","onSubmit","onChange","number","type","value","pattern","title","required","autoComplete","List","ul","ContactList","contactsData","onDeleteContact","map","contact","onClick","id","Thumb","div","Filter","filter","App","state","contacts","handleChange","e","currentTarget","setState","handleSubmit","preventDefault","randomId","nanoid","find","includes","alert","resetForm","getVisibleContacts","normalizedFilter","toLowerCase","item","deleteContact","contactId","prevState","this","visibleContacts","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0b9774a.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const Form = styled.form`\r\n  display: grid;\r\n  grid-template-columns: min-content;\r\n\r\n  & button {\r\n    margin: 10px 0;\r\n    background-color: #e6ffe0d5;\r\n    border: 1px solid #000;\r\n    border-radius: 4px;\r\n    &:hover,\r\n    :focus {\r\n      background-color: #bffab0d3;\r\n      transform: scale(1.1);\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { Form } from './ContactForm.styles';\r\n\r\nfunction ContactForm({ name, onSubmit, onChange, number }) {\r\n  return (\r\n    <div>\r\n      <Form onSubmit={onSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            onChange={onChange}\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            autoComplete=\"off\"\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            onChange={onChange}\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            autoComplete=\"off\"\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const List = styled.ul`\r\n  padding: 5px;\r\n  margin: 10px 0;\r\n\r\n  & li {\r\n    margin: 5px 0;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    & button {\r\n      margin-left: 10px;\r\n      background-color: #f0c8c8;\r\n      border: 1px solid #000;\r\n      border-radius: 4px;\r\n      &:hover,\r\n    :focus {\r\n      background-color: #f09797;\r\n      transform: scale(1.05);\r\n    }\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { List } from './ContactList.styles';\r\n\r\nfunction ContactList({ contactsData, onDeleteContact }) {\r\n  return (\r\n    <List>\r\n      {contactsData.map(contact => (\r\n        <li key={contact.id}>\r\n          {contact.name}: {contact.number}\r\n          <button type=\"button\" onClick={() => onDeleteContact(contact.id)}>\r\n            Удалить\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default ContactList;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Thumb = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  & p {\r\n    margin: 5px 0;\r\n  }\r\n`;\r\n","import {Thumb} from './Filter.styles'\r\n\r\nfunction Filter({ onChange, filter }) {\r\n  return (\r\n    <Thumb>\r\n      <p>Find contacts by name</p>\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        onChange={onChange}\r\n        value={filter}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        autoComplete=\"off\"\r\n      />\r\n    </Thumb>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const randomId = nanoid();\n    const { name, contacts } = this.state;\n    const findContact = contacts.find(contact => contact.name.includes(name));\n\n    findContact\n      ? alert(`${name} is already in contacts`)\n      : this.setState({\n          contacts: [\n            ...this.state.contacts,\n            { id: randomId, name: this.state.name, number: this.state.number },\n          ],\n        });\n\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(item =>\n      item.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const { name, number, filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div id=\"container\">\n        <h1>Phonebook</h1>\n        <ContactForm\n          onChange={this.handleChange}\n          onSubmit={this.handleSubmit}\n          name={name}\n          number={number}\n        />\n        <h2>Contacts</h2>\n        <Filter filter={filter} onChange={this.handleChange} />\n        <ContactList\n          contactsData={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}